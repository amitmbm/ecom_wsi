<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	      http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

	<display-name>Spring Maven Project with hibernate(mysql)</display-name>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:ApplicationContext.xml
		</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- here we are using the jersey and springs servlet , hence on top we have to define where is our application context and contextloader is defined -->
	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		 <init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>com.ami.controller;com.ami.jersey.providers;org.codehaus.jackson.jaxrs</param-value>
		</init-param>
		<!-- json.pojomapping is required to understand the jersey about the JSON and pojo mapping -->
		<!-- request filters -->
		<init-param>
		<param-name>jersey.config.server.provider.classnames</param-name>
		<param-value>org.glassfish.jersey.filter.LoggingFilter;com.ami.filter.ResponseCorsFilter;com.ami.filter.AuthFilter</param-value>
	</init-param>
	<!-- for making cross-domain call(Response filter) -->
	<!-- init-param>
		<param-name>javax.ws.rs.container.ContainerResponseFilters</param-name>
		<param-value>org.glassfish.jersey.filter.LoggingFilter;com.ami.filter.ResponseCorsFilter;com.ami.filter.AuthFilter</param-value>
	</init-param-->
	
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>

</web-app>